name: PostgreSQL Tests
on:
  push:
  workflow_dispatch:

jobs:
  postgres-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        volumes:
          - .github/workflows/seed_database.sql:/docker-entrypoint-initdb.d/init.sql

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Install Architect
        run: npm i @architect/architect

      - name: Install Test Dependencies
        run: npm i tape tap-spec tiny-json-http @architect/sandbox

      - name: Run Sandbox Tests
        run: QUIET=1 npx tape .github/workflows/postgres-custom-test.js | npx tap-spec
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: postgres

      - uses: apogiatzis/ngrok-tunneling-action@v0.1.4
        with:
          timeout: 1m
          port: 5432
          ngrok_authtoken: ${{ secrets.NGROK_AUTHTOKEN }}

      - run: curl http://localhost:4040/api/tunnels

      - name: Notify
        uses: homoluctus/slatify@master
        if: github.ref == 'refs/heads/main' && failure()
        with:
          type: ${{ job.status }}
          job_name: "*postgres custom test*"
          url: ${{ secrets.BX_SLACK_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
